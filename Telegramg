from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, MessageHandler, Filters, CallbackContext

# –ê–¥–º–∏–Ω Telegram ID —Å–∏ (—Å–∏–∑–Ω–∏–Ω–≥ ID‚Äôing–∏–∑)
ADMIN_ID = 308604655  

# /start –±—É–π—Ä—É“ì–∏
def start(update: Update, context: CallbackContext):
    keyboard = [
        [InlineKeyboardButton("üì© –°–∞–≤–æ–ª –±–µ—Ä–∏—à", callback_data='ask_question')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text('–ê—Å—Å–∞–ª–æ–º—É –∞–ª–∞–π–∫—É–º! “ö—É–π–∏–¥–∞–≥–∏ —Ç—É–≥–º–∞ –æ—Ä“õ–∞–ª–∏ —Å–∞–≤–æ–ª —é–±–æ—Ä–∏—à–∏–Ω–≥–∏–∑ –º—É–º–∫–∏–Ω:', reply_markup=reply_markup)

# –¢—É–≥–º–∞ –±–æ—Å–∏–ª–≥–∞–Ω–¥–∞
def button_handler(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()

    if query.data == 'ask_question':
        context.user_data['asking_question'] = True
        query.message.reply_text("–ò–ª—Ç–∏–º–æ—Å, —Å–∞–≤–æ–ª–∏–Ω–≥–∏–∑–Ω–∏ —ë–∑–∏–Ω–≥:")

# –°–∞–≤–æ–ª “õ–∞–±—É–ª “õ–∏–ª–∏—à
def message_handler(update: Update, context: CallbackContext):
    if context.user_data.get('asking_question'):
        user_question = update.message.text
        context.user_data['asking_question'] = False

        # –ê–¥–º–∏–Ω–≥–∞ —é–±–æ—Ä–∏—à
        context.bot.send_message(chat_id=ADMIN_ID, text=f"üÜï –Ø–Ω–≥–∏ —Å–∞–≤–æ–ª:\n\n{user_question}\n\nüë§ –§–æ–π–¥–∞–ª–∞–Ω—É–≤—á–∏: @{update.message.from_user.username}")
        update.message.reply_text("–°–∞–≤–æ–ª–∏–Ω–≥–∏–∑ —é–±–æ—Ä–∏–ª–¥–∏. –ò–ª—Ç–∏–º–æ—Å, –∂–∞–≤–æ–±–Ω–∏ –∫—É—Ç–∏–± —Ç—É—Ä–∏–Ω–≥.")
    else:
        update.message.reply_text("–ú–µ–Ω–≥–∞ –±—É–π—Ä—É“õ –±–µ—Ä–∏–Ω–≥ —ë–∫–∏ '–°–∞–≤–æ–ª –±–µ—Ä–∏—à' —Ç—É–≥–º–∞—Å–∏–¥–∞–Ω —Ñ–æ–π–¥–∞–ª–∞–Ω–∏–Ω–≥.")

# –ë–æ—Ç–Ω–∏ –∏—à–≥–∞ —Ç—É—à–∏—Ä–∏—à
def main():
    updater = Updater("TOKEN", use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CallbackQueryHandler(button_handler))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, message_handler))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
